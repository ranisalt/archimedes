#!/usr/bin/bash -x

chroot="/mnt"

### PACKAGE SELECTION ###
# Bootloader. Please change the bootloader function if you change it.
packages="${packages} syslinux"

# Some daemons, clients and related packages
packages="${packages} openssh wicd"

# X.Org and related packages
packages="${packages} slim xorg-{server,setxkbmap,xinit}"

# DE stuff
packages="${packages} conky dmenu i3-wm i3lock i3status ranger wicd-curses"

# Useful things
packages="${packages} firefox fish git vim"

# CHECK MIRROR CONNECTION
if ! ping -c 1 150.162.66.161 &>/dev/null
then
	echo "Could not connect to 150.162.66.161, please check cables or change IP"
	exit 69
fi

# PARTITIONING AND LABELING
partitioning_uefi() {
	parted -s -- /dev/sda mklabel gpt
	parted -s --align optimal -- /dev/sda \
		mkpart ESP fat32 0% 200MiB \
		mkpart primary ext4 200MiB 10% \
		mkpart primary ext4 10% 100% \
		set 1 boot on

	yes | {
		mkfs.vfat -F32 -L BOOT /dev/sda1
		mkfs.ext4 -L ROOT /dev/sda2
		mkfs.ext4 -L HOME /dev/sda3
	}
}

partitioning_bios() {
	parted -s -- /dev/sda mklabel gpt
	parted -s --align optimal -- /dev/sda \
		mkpart primary ext4 0% 200MiB \
		mkpart primary ext4 200MiB 10% \
		mkpart primary ext4 10% 100% \
		set 1 boot on

	yes | {
		mkfs.ext4 -L BOOT /dev/sda1
		mkfs.ext4 -L ROOT /dev/sda2
		mkfs.ext4 -L HOME /dev/sda3
	}
}

# MOUNT PARTITIONS
# Labels are useful
mount_partitions() {
	mount -L ROOT ${chroot}
	mkdir -p ${chroot}/boot
	mount -L BOOT ${chroot}/boot
	mkdir -p ${chroot}/home
	mount -L HOME ${chroot}/home
}

# BOOTSTRAP
# Configure mirrorlist and run pacstrap
# This is a personal choice mirror. It's 500 meters from home and I get <5ms ping.
bootstrap() {
	cat <<-EOF > /etc/pacman.d/mirrorlist
		Server = http://pet.inf.ufsc.br/mirrors/archlinux/\$repo/os/\$arch
	EOF
	pacstrap ${chroot} base $(eval echo -e ${packages})
}

# CONFIGURE FILES
configure() {
	# -no means --noheadings and --output, but it's funny like that
	root=$(lsblk -no PARTUUID `blkid -L ROOT`)
	boot=$(lsblk -no PARTUUID `blkid -L BOOT`)
	home=$(lsblk -no PARTUUID `blkid -L HOME`)

	# I do not use genfstab because I need a more fine grained approach
	cat <<-EOF > ${chroot}/etc/fstab
		# LOCAL MOUNTS
		# Disable automount on /boot increases security, and letting systemd handle makes it more comfortable :)
		PARTUUID="${boot}" /boot ext4 noatime,noauto,nodev,noexec,nosuid,x-systemd.automount 0 2
	EOF

	echo -n "What is the desired machine hostname?"
	read -er hostname
	echo ${hostname} > ${chroot}/etc/hostname

	sed -i 's/#\(en_US.UTF-8\)/\1/' ${chroot}/etc/locale.gen
	echo LANG=en_US.UTF-8 > ${chroot}/etc/locale.conf

	cat <<-EOF > ${chroot}/etc/systemd/timesyncd.conf
		[Time]
		NTP=ntp.ufsc.br
		FallbackNTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org
	EOF

	# Configure mkinitcpio to use LZ4. It's faster.
	sed -i 's/^\(COMPRESSION\)/#\1/g' ${chroot}/etc/mkinitcpio.conf
	sed -i 's/^#\(COMPRESSION="lz4"\)/\1/' ${chroot}/etc/mkinitcpio.conf

	# Let wheel users become use sudo
	sed -i 's/^#.*?\(%wheel ALL=(ALL) ALL\)/\1/' ${chroot}/etc/sudoers
}

# CONFIGURE ON CHROOT
# Does some things other than write to files
configure_chroot() {
	# Generate locales
	arch-chroot ${chroot} locale-gen

	# Symlink timezone
	arch-chroot ${chroot} ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime

	# Read and store common user and password
	echo -n "What is the desired username?"
	read -er username
	arch-chroot ${chroot} useradd -m -G audio,users,video,wheel ${username}
	echo -n "What is the desired ${username} password?"
	read -ers password

	# Read and store root password
	echo -n "What is the desired root password?" 
	read -ers rootpw
	arch-chroot ${chroot} chpasswd <<-EOF
		root:$rootpw
		$username:$password
	EOF
	unset rootpw

	arch-chroot ${chroot} systemctl enable slim.service wicd.service
}

# INSTALL BOOTLOADER
install_bootloader_uefi() {
	mkdir -p ${chroot}/boot/EFI/syslinux
	arch-chroot ${chroot} cp -r /usr/lib/syslinux/efi64/* /boot/EFI/syslinux
	efibootmgr -c -d /dev/sda -p 1 /l /EFI/syslinux/syslinux.efi -L "Syslinux"

	# Fix retarded hardcoded default
	sed -i 's/sda3/sda2/' ${chroot}/boot/EFI/syslinux/syslinux.cfg
}

install_bootloader_bios() {
	syslinux-install_update -i -a -m -c ${chroot}

	# Fix retarded hardcoded default
	sed -i 's/sda3/sda2/' ${chroot}/boot/syslinux/syslinux.cfg
}

uefi=$([ -d /sys/firmware/efi ])

$uefi && partitioning_uefi || partitioning_bios
mount_partitions
bootstrap
configure
configure_chroot
$uefi && install_bootloader_uefi || install_bootloader_bios
